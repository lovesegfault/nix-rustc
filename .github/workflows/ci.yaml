name: ci
on:
  push:
    branches:
      - master
      - try
  pull_request:

permissions: {}

env:
  flake: github:${{ github.repository }}/${{ github.sha }}
  nix-conf: |-
    accept-flake-config = true
    always-allow-substitutes = true
    builders-use-substitutes = true
    max-jobs = auto
jobs:
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/nix-installer-action@v11
        with:
          extra-conf: ${{ env.nix-conf }}
      - uses: cachix/cachix-action@v15
        with:
          name: rustc
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: nix-flake-check
        run: nix flake check '${{ env.flake }}'
  flake-show:
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/nix-installer-action@v11
        with:
          extra-conf: ${{ env.nix-conf }}
      - uses: cachix/cachix-action@v15
        with:
          name: rustc
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: nix-flake-show
        run: nix flake show '${{ env.flake }}'
  build:
    name: build-x86-64
    runs-on: ubuntu-latest
    needs: [ get-attrs ]
    steps:
      - uses: DeterminateSystems/nix-installer-action@v11
        with:
          extra-conf: ${{ env.nix-conf }}
      - uses: cachix/cachix-action@v15
        with:
          name: rustc
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: nix-fast-build
        run: |
          declare -a args=(
            '--no-nom'
            '--skip-cached'
            '--systems=${{ env.system }}'
            '--option' 'accept-flake-config' 'true'
            '--retries=3'
          )
          args+=('--flake=${{ env.flake }}#devShells.x86_64-linux.default.inputDerivation
          nix run '${{ env.flake }}#nix-fast-build' -- "${args[@]}"

  check:
    runs-on: ubuntu-latest
    needs: [ flake-check, flake-show, build ]
    if: always()
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: eval
